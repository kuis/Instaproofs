/*==========================================================================*\
 A Notification popup
 \*==========================================================================*/
"use strict";
var BaseView = require('app/base/base-view');

var app = require('app');

var NotificationPopup = BaseView.extend({
  viewType: 'notification-popup',
  // autoRender: true,
  template: require('app/templates')['notification-popup']['notification-popup'],

  initialize: function (options) {
    BaseView.prototype.initialize.apply(this, arguments);

    options = options || {};

    this.content = options.content || this.content;
    this.hideAfter = options.hideAfter || this.hideAfter;

    this.render();

    this.after(this.hideAfter, function () {
      this.hide();
    }.bind(this));
  },

  props: {
    displayed: ['boolean', true, true],
    content: ['string', true, ''],
    width: ['number', true, 350],
    hideAfter: ['number', true, 1500],
  },
  
  events: {
    click: 'hide',
  },

  bindings: {
    displayed: {
      type: 'booleanClass',
      name: 'displayed',
    },
    // width: {
    //   type: function (el, val) {
    //     el.style.width = val + 'px';
    //   },
    //   selector: '.box',
    // },
  },

  hide: function () {
    if (!this.displayed) return;
    this.displayed = false;
    this.after(400, function () {
      this.remove();
    });
  },

  render: function () {
    this.renderWithTemplate(this);
  }

});

module.exports = {
  show: function (options) {
    var popup = new NotificationPopup({
      content: options.content || '',
      hideAfter: options.hideAfter || 3000
    });
    document.body.insertBefore(popup.el, document.getElementById('popup'));
  }
};
