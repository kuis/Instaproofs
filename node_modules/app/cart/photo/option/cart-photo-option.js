/*==========================================================================*\
  A single photo purchase option in the cart 
\*==========================================================================*/
"use strict";

var AddonView = require('../addon/cart-photo-addon');
var BaseView = require('app/base/base-view');
var CropView = require('app/photo/form/crop-icon');
var NumberInput = require('app/number-input/number-input');

var app = require('app');

module.exports = BaseView.extend({
  template: require('app/templates').cart.photo.option['cart-photo-option'],
  
  props: {
    removed: ['boolean', true, false],
    
    
    mobileQty: ['boolean', true, false], // whether to use mobile qty selector
    
    // whether Plus and Minus buttons are displayed in mobile view 
    qtyInputMode: ['boolean', true, false],
    
    qtyView: 'state',
  },
  
  derived: {
    cartPage: {
      fn: function () {
        return this.getParent('cart-page');
      },
    },
    photo: {
      fn: function () {
        return this.getParent('cart-photo');
      },
    },
  },
  
  bindings: {
    // mobileQty: {
    //   type: function (el, val) {
    //     // el.readOnly = !!val;
    //     el.disabled = !!val;
    //   },
    //   selector: '.qty input',
    // },
    'qtyView.inputMode': {
      type: 'booleanClass',
      name: 'qty-input-mode',
    },
    
    'model.qty': {
      type: function (el, val) {
        if (this.qtyView) this.qtyView.value = val;
        // if (val < 1) {
        //   this.model.qty = 1;
        //   this.qtyView.value = 1;
        //   this.removeFromCart();
        // }
        // el.value = val;
        // this.el.classList.toggle('qty-is-one', val === 1);
      },
      // type: 'value',
      // selector: '.qty input',
    },
    'model.addons.length': {
      type: 'booleanClass',
      yes: '',
      no: 'no-addons',
    },
    'model.discounted': {
      type: 'booleanClass',
      name: 'has-some-discount',
    },
    'model.base_price': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.price-base',
    },
    'model.bulkPricingAvailable': {
      type: 'booleanClass',
      name: 'bulk-pricing-available',
    },
    'model.bulkPricingActive': {
      type: function (el, val) {
        this.el.classList.toggle('bulk-pricing-active', val);
        el.innerHTML = this.lz(val ? 'Bulk pricing active' 
                                   : 'Bulk pricing available');
      },
      // name: 'bulk-pricing-active',
      selector: '.bulk-tip',
    },
    'model.price': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.price-final',
    },
    
    'model.photo_option.discount': {
      type: function (el, val) {
        el.classList.toggle('discounted', !!val);
        if (val) this.query('.discount').innerHTML = 
                                      '-'+ Math.round(val.discount * 100) + '%';
      },
    },
    
    'removed': {
      type: 'booleanClass',
      name: 'removed',
    },
  },
  
  initialize: function () {
    BaseView.prototype.initialize.apply(this, arguments);
    
    this.listenTo(app.state, 'change:width', this.resize);
    
    this.cropUrl = this.model.photo.app_url + app.router.encodeParams({
      crop: true,
      sizeId: this.model.size.id,
      colorId: this.model.cart_photo.color_id,
    });
    
    // if (this.model.size.width && this.model.size.height) {
    //   this.crop = new CropModel({
    //     option: this,
    //     photo: this.photo,
    //   });
      
    // this.listenTo(this.crop, 'change', function () {
    //   this.onCropChange();
    // });
    // }
    
    this.resize();

    this.model.updatePrice();
  },
  
  events: {
    // 'click .plus': 'plus',
    // 'click .minus': 'minus',
    // 'click .qty input': 'onQtyClick',
    // 'click .qty .hide-controls': 'onHideControlsClick',
    'click .checkbox': 'removeFromCart',
    
    // 'mousedown .plus': 'onQtyMouseDown',
    // 'mousedown .minus': 'onQtyMouseDown',
    
    // 'click .qty input': 'onQtyClick',
    // 'focus .qty input': 'focusQty',
    // 'keyup .qty input': 'onQtyKeyup',
    // 'change .qty input': 'updatePrice',
    // 'click .crop': 'toggleCropping',
    
    'click .action.remove': 'removeFromCart',
    'click .button.restore': 'restore',
    'click .button.hide': 'hide',
    
    
    // 'mouseenter .crop': 'showCrop',
    // 'mouseleave .crop': 'onCropMouseLeave',
    // 'mouseover .crop': 'showCrop',
    
    'dblclick .plus, .minus, .button': 'preventDefault',
    // 'selectstart .plus': 'preventDefault',
    // 'selectstart .minus': 'preventDefault',
  },
  
  resize: function () {
    this.mobileQty = app.state.width <= 550;
  },
  
  // onHideControlsClick: function () {
  //    this.qtyInputMode = false;
  // },
  // onQtyClick: function (e) {
  //   if (this.mobileQty) {
  //     this.qtyInputMode = !this.qtyInputMode;
  //     if (e && e.preventDefault) e.preventDefault();
  //     if (e && e.stopPropagation) e.stopPropagation();
  //   }
  //   else {
  //     this.focusQty();
  //   }
  // },
  // focusQty: function () {
  //   this.qtyInput.focus();
  //   this.qtyInput.select();
  //   var self = this;
  //   setTimeout(function () {
  //     self.qtyInput.focus();
  //     self.qtyInput.select();
  //     setTimeout(function () {
  //       if (self.qtyInput.scrollIntoView) {
  //         self.qtyInput.scrollIntoView(false);
  //       }
  //     });
  //   }, 100);
  // },
  
  render: function () {
    this.renderWithTemplate(this);
    this.renderCollection(this.model.addons, AddonView, 
                          this.query('.extras-list'));
    this.query('.right').addEventListener('selectstart', 
                                         this.preventDefault, false);
    this.cacheElements({
      qtyInput: '.qty input',
    });
    
    if (!this.model.size.no_qty) {
      this.qtyView = this.renderSubview(new NumberInput({ 
        value: this.model.qty,
      }), '.qty');
      this.listenTo(this.qtyView, 'change:value', this.readQty);
    } 
    
    if (this.model.size.width && this.model.size.height) {
      this.cropIcon = this.renderSubview(new CropView({
        model: this.model.crop,
        imgUrl: this.model.photo.getUrl(this.model.cart_photo.color_id),
        thumbRatio: this.model.photo.ratio,
        
        photoModel: this.model.photo,
        sizeModel: this.model.size,
      }), '.crop-container');
    }
  },
  
  onCropChange: function () {
    
  },
  
  
  // plus: function (e) {
  //   if (e && e.preventDefault) e.preventDefault();
  //   var multi = 1;
  //   if (e && e.altKey) multi *= 10;
  //   if (e && e.shiftKey) multi *= 5;
  //   this.model.qty += multi;
  // },
  // minus: function (e) {
  //   if (e && e.preventDefault) e.preventDefault();
  //   var multi = 1;
  //   if (e && e.altKey) multi *= 10;
  //   if (e && e.shiftKey) multi *= 5;
    
  //   if (multi >= this.model.qty) {
  //     this.removeFromCart();
  //     return;
  //   }
    
  //   this.model.qty -= this.model.qty - multi < 1 ? this.model.qty - 1 : multi;
  // },
  
  // onQtyMouseDown: function (e) {
  //   if (this.qtyRollTimer) clearTimeout(this.qtyRollTimer);
  //   this.qtyRoll = {
      
  //   };
  //   if (e.target.closest('.plus')) 
  //   this.qtyRollTimer = setTimeout(this.startQtyRoll, 700);
  // },
  
  removeFromCart: function () {
    // this.model.qty = 0;
    this.cartModel = this.model.cart;
    this.collection = this.model.collection;
    this.model.collection.remove(this.model, { silent: true });
    this.removed = true;
    
    if (!this.collection.length) {
      this.cartPhotoModel = this.collection.parent;
      this.cartModel.photos.remove(this.cartPhotoModel, { silent: true });
    }
    
    this.cartModel.updateSummary();
    this.cartModel.save();
    // this.el.classList.add('removed');
  },
  restore: function () {
    var items = this.parent.el.querySelectorAll('.cart-photo-item');
    var i, index = 0;
    for (i = 0; i < items.length; i++) {
      if (items[i] === this.el) {
        index = i;
        break;
      }
    }
    this.collection.add(this.model, { at: index, silent: true });
    this.removed = false;
    
    if (this.collection.length === 1 && this.cartPhotoModel) {
      items = this.el.closest('.cart-photos').querySelectorAll('.cart-photo');
      var photoEl = this.el.closest('.cart-photo');
      for (i = 0; i < items.length; i++) {
        if (items[i] === photoEl) {
          index = i;
          break;
        }
      }
      this.cartModel.photos.add(this.cartPhotoModel, { 
        at: index, 
        silent: true,
      });
    }
    
    this.cartModel.updateSummary();
    this.cartModel.save();
  },
  hide: function () {
    this.remove();
    if (!this.collection.length) {
      this.photo.remove();
    }
    this.collection = null;
    this.cartPage.checkForEmptiness();
  },
  
  readQty: function () {
    if (this.qtyView) {
      if (this.qtyView.value < 1) {
        this.qtyView.value = this.model.qty;
        this.removeFromCart();
      }
      else {
        this.model.qty = this.qtyView.value;
      }
    }
  },
  
});
