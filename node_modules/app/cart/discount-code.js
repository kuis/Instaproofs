"use strict";

var BaseView = require('app/base/base-view');

module.exports = BaseView.extend({
  viewType: 'promo-code',
  
  props: {
    loading: ['boolean', true, false],
  },
  
  bindings: {
    'model.loading': {
      type: function () {
        this.loading = this.model.loading;
      },
    },
    'model.valid': {
      type: 'booleanClass',
      name: 'valid',
    },
    loading: {
      type: function (el, val) {
        this.el.classList.toggle('loading', val);
        this.query('.button.apply-code').classList.toggle('loading', val);
      },
    },
  },
  
  initialize: function () {
    BaseView.prototype.initialize.apply(this, arguments);
    
    this.cacheElements({
      inputEl: 'input',
    });
  },
  
  events: {
    'click .button.apply-code': 'applyCode',
  },
  
  applyCode: function () {
    if (this.loading) return;
    if (this.model.valid) return this.resetCode();
    
    var code = this.inputEl.value.trim();
    if (!code) {
      this.inputEl.focus();
      return;
    }
    var self = this;
    
    console.log('apply code', code);
    this.model.discount_code = code;
    
    this.model.fetch({
      success: function (model, res) {
        // res = { // Single Dollar Value: $12 off any size order
        //   "status": 200,
        //   "data": {
        //     "discount_code": "d4e2e4a423",
        //     "valid": true,
        //     "message": null,
        //     "type": "sDollar",
        //     "remaining": 1200,
        //     "tiers": [{ "min": 0, "value": 1200 }],
        //     "include_products": false,
        //     "pay_for_tax": false,
        //     "apply_pre_tax_calc": false
        //   },
        //   "timestamp": 1431543048
        // };
        
        
        if (res.status === 404) {
          self.alert("No matching discount code found.");
          return;
        }
        if (res.status === 410) {
          self.alert("No matching discount code found.");
          return;
        }
        console.log('success', res);
      },
      error: function () {
        self.alert("Failed to verify the checkout code.<br>"+
            "Please check your internet connection and try again.");
      },
    });
  },
  
  resetCode: function () {
    this.inputEl.value = '';
    this.model.clear();
  },
});
