"use strict";

var BaseModel = require('app/base/base-model');

var app = require('app');
var debounce = require('lodash.debounce');

module.exports = BaseModel.extend({
  type: 'shipping',
  props: {
    first_name: ['string', true, ''],
    last_name: ['string', true, ''],
    email: ['string', true, ''],
    phone: ['string', true, ''],
    address1: ['string', true, ''],
    address2: ['string', true, ''],
    city: ['string', true, ''],
    country_id: ['number', true, 0],
    state_id: ['number', true, 0],
    zip: ['string', true, ''],
  },

  derived: {
    taxHash: {
      deps: ['city', 'state_id', 'zip'],
      fn: function () {
        return this.city + ':' + this.state_id + ':' + this.zip;
      },
    },
  },

  initialize: function () {
    BaseModel.prototype.initialize.apply(this, arguments);
    this.store = debounce(this.store, 100);

    this.listenTo(this, 'change', this.store);
    
    if (app.storage.saveShipping) {
      var stored = app.storage[this.type + 'Address'];
      if (stored) this.set(JSON.parse(stored));
    }
  },

  store: function () {
    app.storage[this.type + 'Address'] = JSON.stringify(this.toJSON());
  },

  unstore: function () {
    
    // delete app.storage[this.type + 'Address'];
  }
});
