/*==========================================================================*\
 Paypal Checkout Functionalities Mixin
 \*==========================================================================*/
"use strict";
var app = require('app');
var axios = require('axios');
var assign = require('lodash.assign');
var appUrl = 'http://demo.instaproofs.com'; // app.url;

module.exports = {
  /**
   * Verifies cart totals
   *
   * @param {string} cid - Cart ID
   * @param {Object} params - Parameters
   * @param {number} event_id - Event ID
   * @param {number} shipping_state_id - Shipping State ID, optional
   * @param {string} shipping_city - Shipping City, optional
   * @param {string} shipping_zipcode - Shipping Zipcode, optional
   * @param {string} shipping_type - Shipping type, optional
   * @param {string} discount_code - Discount code, optional
   * @param {string} billing_email - Billing Email, optional
   *
   * @returns {Object} promise
   */
  verifyCartTotal: function (cid, params) {
    var apiUrl = app.apiUrl + 'cart/totals/' + cid;
    var apiParams = assign({}, params, {
      url: appUrl
    });

    return axios.get(apiUrl, {
      params: apiParams
    });
  },

  /**
   * Verifies that transaction is ready to start
   *
   * @param {Object} params - params
   * @param {number} event_id - Event ID
   * @param {number} amount - Amount of transaction (no decimal mark)
   * @param {string} discount_code - Discount code
   *                (can be blank, but must be present)
   * @param {number} shipping_type - Shipping Type
   *                (0=pickup, 1=shipping, 2=shipping2, 3=shipping3,
   *                4=international)
   * @param {string} shipping_city - Shipping City
   * @param {number} shipping_state_id - Shipping State ID
   * @param {string} shipping_zip - Shipping Zip
   * @param {string} email - Email
   *
   * @returns {Object} promise
   */
  verifyTransaction: function (params) {

  },

  /**
   * Starts the transaction
   *
   * @param {string} cid - Cart ID
   * @param {Object} params - params
   * @param {number} event_id - Event ID
   * @param {number} amount - Amount of transaction (no decimal mark)
   * @param {string} discount_code - Discount code
   *                (can be blank, but must be present)
   * @param {number} shipping_type - Shipping Type
   *                (0=pickup, 1=shipping, 2=shipping2, 3=shipping3,
   *                4=international)
   * @param {string} shipping_city - Shipping City
   * @param {number} shipping_state_id - Shipping State ID
   * @param {string} shipping_zip - Shipping Zip
   * @param {string} email - Email
   *
   * @returns {Object} promise
   */
  startTransaction: function (cid, params) {
    var apiUrl = app.apiUrl + 'checkout/paypal/' + cid;
    var apiParams = assign({}, params, {
      url: appUrl
    });

    return axios.post(apiUrl, apiParams);
  },

  /**
   * Finalizes the transaction
   *
   * @param {string} cid - Cart ID
   * @param {Object} params - params
   * @param {number} event_id
   * @param {string} token - this value is sent by PayPal as a URL parameter when they send the user back.
   *                It should match the token retrieved from the previous API call.
   * @param {number} amount - no decimal mark
   * @param {string} order_note - optionally provided by the user at checkout, the key must be present in the API call
   * @param {string} discount_code - value can be blank, but the key must be present
   * @param {number} shipping_type (0=pickup, 1=shipping, 2=shipping2, 3=shipping3, 4=international)
   * @param {string} shipping_first_name
   * @param {string} shipping_last_name
   * @param {string} shipping_address
   * @param {string} shipping_city
   * @param {number} shipping_state_id
   * @param {string} shipping_zip
   * @param {string} email
   * @param {string} phone
   *
   * @returns {Object} promise
   */
  finalizeTransaction: function (cid, params) {
    var apiUrl = app.apiUrl + 'checkout/paypal/' + cid;
    var apiParams = assign({}, params, {
      url: appUrl
    });

    return axios.put(apiUrl, apiParams);
  }

  
};
