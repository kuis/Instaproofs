"use strict";

// var console = require('app/utils/console-mock');

var _ = require('underscore');
var moment = require('moment');
var sinon = require('sinon');
var URI = require('URIjs');
var now = moment();

var fakeConfig = require('./fake-config');
var fakePhotographer = require('./fake-photographer');
var fakePurchaseOptions = require('./fake-purchase-options');
var fakePurchaseAddons = require('./fake-purchase-addons');
var fakeEvents = require('./fake-events');

var headers = { "Content-Type": "application/json" };

var server = module.exports = sinon.fakeServer.create();
server.autoRespond = true;
server.autoRespondAfter = 750;

// var performance = window.performance = window.performance || {};
// var performanceNow = performance.now ? 'now' : performance.webkitNow ? 
//     'webkitNow' : performance.mozNow ? 'mozNow' : performance.msNow ? 
//     'msNow' : performance.oNow ? 'oNow' : null;
    
// if (!performanceNow) {
//   console.log('no performance timing');
//   var time = function () {};
// }
// else {
//   var time = function () { 
//     return performance[performanceNow](); 
//   };
// }
// function hundreads(num) {
//   return Math.round(num * 100) / 100;
// }

function getBootstrap(query) {
  if (!query || !query.bootstrap) return {};
  var res = {};
  res.config = fakeConfig;
  res.photographer = fakePhotographer;
  
  res.purchase_options = fakePurchaseOptions;
  res.purchase_addons = fakePurchaseAddons;
  
  return res;
}

// Event List Request ========================================================
server.respondWith(/.*\/api\/events(\?.*)/, function (req, query) {
  // console.log('GET '+ req.url);
  // var _start = time();
  
  query = URI.parseQuery(query);
  var res = getBootstrap(query);
  var models = _.clone(fakeEvents.events);
  
  
  // sort models
  if (query.sort === 'name') models.sort(comparators.name);
  else if (query.sort === 'type') models.sort(comparators.type);
  
  
  // filter models
  if (query.filter === 'showcased') {
    models = models.filter(function (model) {
      return model.showcase;
    });
  }
  else if (query.filter === 'upcoming') {
    models = models.filter(function (model) {
      return moment(model.date) > now;
    });
  }
  else if (query.filter === 'current') {
    models = models.filter(function (model) {
      return moment(model.date) <= now;
    });
  }
  
  res.complete = models.length <= +query.offset + (+query.limit);
  res.total_count = models.length;
  res.data = models.slice(+query.offset, +query.offset + (+query.limit));
  
  res = JSON.stringify(res);
  // var m = encodeURIComponent(res).match(/%[89ABab]/g);
  // console.log('unicode chars: '+ (m ? m.length : 0));
  // var kb = hundreads(res.length / 1024) + ' KB';
  // console.log('response size: ' + kb);
  
  // console.log('response prepaired in '+ hundreads(time() - _start) +'ms');
  // _start = time();
  req.respond(200, headers, res);
  // console.log('response handled in '+ hundreads(time() - _start) +'ms');
});

// Single Event Request ======================================================
server.respondWith(/.*\/api\/events\/(\d+)(\?.*)?/, function (req, id, query) {
  // console.log('GET '+ req.url);
  // var _start = time();
  query = URI.parseQuery(query);
  var res = getBootstrap(query);
  var event = _.clone(_.findWhere(fakeEvents.events, { id: +id }));
  
  for (var i = 0; i < event.categories.length; i++) {
    event.categories[i].photos = 
        fakeEvents.photos['cat'+ event.categories[i].id];
  }

  for (var i = 0; i < event.products.length; i++) {
    event.products[i].photos = 
        fakeEvents.photos['prod'+ event.products[i].id];
  }
  
  res.data = event;
  res = JSON.stringify(res);
  // console.log('response size: '+ hundreads(res.length / 1024) +' KB');
  // console.log('response prepaired in '+ hundreads(time() - _start) +'ms');
  // _start = time();
  req.respond(200, headers, res);
  // console.log('response handled in '+ hundreads(time() - _start) +'ms');
});

var comparators = {
  date: function (a, b) {
    return Date.parse(b.date) - Date.parse(a.date);
  },
  name: function (a, b) {
    var aName = a.name.toUpperCase();
    var bName = b.name.toUpperCase();
    if (aName === bName) return Date.parse(b.date) - Date.parse(a.date);
    if (aName > bName) return 1;
    if (aName < bName) return -1;
    return 0;
  },
  type: function (a, b) {
    var aType = a.type.toUpperCase();
    var bType = b.type.toUpperCase();
    if (aType === bType) return Date.parse(b.date) - Date.parse(a.date);
    else {
      if (aType > bType) return 1;
      if (aType < bType) return -1;
      return 0;
    }
  },
};

