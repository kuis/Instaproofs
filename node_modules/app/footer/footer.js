/*==========================================================================*\
  Global footer
\*==========================================================================*/
"use strict";

var app = require('app');
var BaseView = require('app/base/base-view');
var popup = require('app/popup/popup');
var LanguagesView = require('./languages');

module.exports = BaseView.extend({
  props: {
    i18n: 'state',
  },
  
  template: require('app/templates').footer.footer,
  
  initialize: function () {
    BaseView.prototype.initialize.apply(this, arguments);
    this.model = app.config.photographer;
    this.i18n = app.i18n;
    this.listenTo(app, 'language-change', this.updateLanguage);
  },
  
  events: {
    'click .language': 'showLanguages',
  },
  
  bindings: {
    'i18n.id': {
      hook: 'language',
      type: function () {
        this.updateLanguage();
      },
    },
    
    'model.name': '[data-hook=name]',
    'model.combinedAddress': {
      hook: 'address',
      type: function (el, val) {
        el.href = "http://maps.google.com?q=" + val;
        el.innerHTML = val;
      },
    },
    'model.phone': {
      hook: 'phone',
      type: function (el, val) {
        el.href = "tel:" + val;
        el.innerHTML = val;
      },
    },
    'model.email': {
      hook: 'email',
      type: function (el, val) {
        el.href = "mailto:" + val;
        el.innerHTML = val;
      },
    },
    'model.website_url': {
      hook: 'web',
      type: function (el, val) {
        el.href = val;
        el.innerHTML = val.replace(/^https?:\/\//i, '');
      },
    },
    
    'model.facebook_url': {
      hook: 'facebook',
      type: function (el, val) {
        if (!val) el.style.display = 'none';
        else el.href = val;
      },
    },
    'model.twitter_url': {
      hook: 'twitter',
      type: function (el, val) {
        if (!val) el.style.display = 'none';
        else el.href = val;
      },
    },
    'model.linkedin_url': {
      hook: 'linkedin',
      type: function (el, val) {
        if (!val) el.style.display = 'none';
        else el.href = val;
      },
    },
    'model.instagram_url': {
      hook: 'instagram',
      type: function (el, val) {
        if (!val) el.style.display = 'none';
        else el.href = val;
      },
    },
  },
  
  updateLanguage: function () {
    this.queryByHook('language').textContent = this.i18n.locale.name;
    this.query('.language').className = 'language '+ this.i18n.id;
  },
  
  showLanguages: function (e) {
    if (e && e.preventDefault) e.preventDefault();
    
    if (!this.languagesView) {
      this.languagesView = new LanguagesView({
        parent: this,
      });
    }
    
    if (popup.displayedId && popup.displayedId === this.popupId) return;
    this.popupId = popup.show({
      targetEl: this.query('.language'),
      content: this.languagesView.el,
      minWidth: 1,
    });
  },
});

