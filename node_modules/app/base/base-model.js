/*==========================================================================*\
  Base model to be extended by all others
\*==========================================================================*/
"use strict";

var AmpersandModel = require('ampersand-model');

var helpers = require('app/util/helpers/helpers');
var moment = require('moment');

module.exports = AmpersandModel.extend({
  // extraProperties: 'reject', // throw errors when setting unknown propery
  extraProperties: 'ignore',
  
  dataTypes: {
    
    // all dates are moments =================================================
    // the underlying value is a unix time in milliseconds
    // or `false` for not value
    moment: {
      set: function (newVal) {
        if (newVal && newVal._isAMomentObject) {
          newVal = newVal.valueOf();
        }
        else if (typeof newVal !== 'number' && newVal !== false) {
          // if (!newVal || newVal === 'N/A') {
          //   newVal = null;
          // }
          newVal = moment(newVal).valueOf();
        }
        
        return {
          val: newVal,
          type: 'moment',
        };
      },
      get: function (val) {
        return val === false ? false : moment(val);
      },
      compare: function (currentVal, newVal) {
        return currentVal === newVal;
      },
      default: function () {
        return false;
      }
    },
    
    number: { // autoconvert to numbers
      set: function (newVal) {
        return {
          val: +newVal,
          type: 'number',
        };
      },
      get: function (val) {
        return val;
      },
      default: function () {
        return 0;
      }
    },
  },
  
  bindMethods: function () {
    return helpers.bindMethods(this, arguments);
  },
  
  formatMoney: function (val) {
    return helpers.formatMoney(val);
  },
  
  parse: function (res) {
    if (res.id && !res.data) return res; // not a server response 
    
    // all model data is returned in a 'data' property
    return res.data;
  },
});
