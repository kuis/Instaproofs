/*==========================================================================*\
  A purchase option in the buy form
\*==========================================================================*/
"use strict";

var BaseView = require('app/base/base-view');
var OptionsView = require('./addon-options');

var helpers = require('app/util/helpers/helpers'); 
var moment = require('moment');
var popup = require('app/popup/popup');

module.exports = BaseView.extend({
  viewType: 'addon',
  dictionary: 'photoForm',
  template: require('app/templates').photo.form.addon,
  
  popupId: null, // ID of this view's currently displayed popup
  
  props: {
    active: ['boolean', true, false],
    price: ['number', true, 0],
    selected_id: 'number',
    qty: ['number', true, 0],
  },
  
  derived: {
    photoForm: {
      fn: function () {
        return this.getParent('photo-form');
      },
    },
    size: {
      fn: function () {
        return this.getParent('size');
      },
    },
  },
  
  bindings: {
    active: {
      type: 'booleanClass',
      name: 'active',
    },
    price: {
      type: function (el, val) {
        if (this.model.discount) {
          // el.innerHTML = '-'+ this.model.formatMoney(this.model.discountAmount);
        }
        else if (this.model.bulkQty) {
          // el.innerHTML = '-'+ this.model.formatMoney(this.model.bulkDiscount);
        }
        else {
          el.innerHTML = '+'+ this.model.formatMoney(val);
        }
        
      },
      selector: '.price.single',
    },
    qty: {
      type: function (el, qty) {
        // this.el.classList.toggle('show-totals', 
        //     this.model.bulkType === 'compound' ? qty >= 1  : qty >= 2);
        this.el.classList.toggle('show-totals', 
            this.model.bulkType === 'compound' ? false : qty >= 2);
        if (this.qtyEl) this.qtyEl.innerHTML = qty;
        this.updateTotal();
      },
    },
    selected_id: {
      type: function (el, id) {
        // if (!id || !this.model.options.length) return;
        if (!this.model.options.length || id === undefined) return;
        var option = id === 0 ? this.model.options.at(0) 
                              : this.model.options.get(id);
        this.nameEl.innerHTML = id ? option.name : this.model.name;
        this.setPrice(option.price);
        // this.price = option.price;
      },
    },
    'model.bulkType': {
      type: function (el, type) {
        if (!type || type === 'none') return;
        el.classList.add('bulk-'+ type);
      },
    },
    'model.bulkPrice': {
      type: function (el, amount) {
        this.updateTotal();
        if (!amount) return;
        el.innerHTML = this.model.formatMoney(amount);
      },
      selector: '.price.bulk-price',
    },
    'model.bulkDiscount': {
      type: function (el, amount) {
        this.updateTotal();
        if (!amount) return;
        el.innerHTML = '-'+ this.model.formatMoney(amount);
      },
      selector: '.price.bulk-discount',
    },
    'model.discountAmount': {
      type: function (el, amount) {
        this.updateTotal();
        if (!amount) return;
        el.innerHTML = '-'+ this.model.formatMoney(amount);
      },
      selector: '.price.discount-amount',
    },
    'model.totalDiscount': {
      type: function (el, amount) {
        if (!amount) return;
        el.innerHTML = '-'+ this.model.formatMoney(amount);
      },
      selector: '.price.total-discount',
    },
    'model.discount.expiration': {
      type: function (el, expiration) {
        if (expiration === 0) { // expired
          this.model.collection.remove(this.model);
          this.photoForm.updatePositions();
        }
        if (!expiration) return;
        if (typeof expiration === 'number') {
          var left = moment.duration(expiration);
          
          el.innerHTML = this.lz('%s discount ending in %s', 
              helpers.formatDiscount(this.model.discount.discount),
              this.toDoubleDigit(left.days() * 24 + left.hours()) +':'+ 
              this.toDoubleDigit(left.minutes()) +':'+ 
              this.toDoubleDigit(left.seconds()));
        }
        else {
          el.innerHTML = this.lz('%s discount ending %s', 
              helpers.formatDiscount(this.model.discount.discount), 
              this.model.discount.expires);
        }
      },
      selector: '.name.discount',
    },
  },
  
  initialize: function () {
    BaseView.prototype.initialize.apply(this, arguments);
    if (!this.model.discount && !this.model.bulkQty) {
      this.listenTo(this.size.event.sales, 'update', this.updateAddonDiscount);
    }
  },
  
  events: {
    'click .main': 'onClick',
    'click .info': 'showDescription',
  },
  
  onClick: function (e) {
    if (this.model.discount || this.model.bulkPrice) return;
    if (this.model.bulkDiscount) {
      this.size.qty = this.model.bulkQty;
      this.size.updatePrice();
      return;
    }
    if (e && e.target && e.target.closest('.info')) return;
    if (this.model.options.length <= 1) {
      this.active = !this.active;
      this.updatePrice();
    }
    else {
      this.showOptions();
    }
  },
  
  render: function () {
    // console.trace();
    // if (!this.parent.collection) return;
    this.renderWithTemplate();
    this.cacheElements({
      nameEl: '.name',
      priceEl: '.price.single',
      finalPriceEl: '.price.final',
      qtyEl: '.addon-qty',
      info: '.info',
    });
    
    if (this.model.options.length > 1) {
      var selected_option = this.model.options.where({ selected: true })[0];
      if (selected_option) {
        this.selected_id = selected_option.id;
      }
    }
    if (this.model) this.updatePrice(true);
    this.updateAddonDiscount();
  },
  
  updateTotal: function () {
    if (!this.finalPriceEl) return;
    if (this.model.discount) {
      this.finalPriceEl.innerHTML = 
          // '-'+ this.model.formatMoney(this.qty * this.model.discountAmount);
          '-'+ this.model.formatMoney(this.model.totalDiscount);
    }
    else if (typeof this.model.bulkQty === 'number') {
      if (this.model.bulkType === 'fixed') {
        this.finalPriceEl.innerHTML = 
            '-'+ this.model.formatMoney(this.qty * this.model.bulkDiscount);
      }
      else {
        this.finalPriceEl.innerHTML = 
            this.model.formatMoney(this.qty * this.model.bulkPrice);
      }
    }
    else {
      this.finalPriceEl.innerHTML = 
          '+'+ this.model.formatMoney(this.price * this.qty);
    }
  },
  
  showDescription: function (e) {
    if (popup.displayedId && popup.displayedId === this.popupId) return;
    this.popupId = popup.show({
      title: this.model.full_name || this.model.name,
      content: this.model.description,
      image: this.model.img_url ? {
        src: this.model.img_url,
        width: this.model.img_width,
        height: this.model.img_height,
      } : null,
      targetEl: this.info,
    });
  },
  
  showOptions: function () {
    if (!this.optionsView) {
      this.optionsView = new OptionsView({
        collection: this.model.options,
        model: this.model,
        parent: this,
      });
    }
    
    if (popup.displayedId && popup.displayedId === this.popupId) return;
    this.popupId = popup.show({
      // targetEl: this.el,
      targetEl: this.query('.main > .name'),
      content: this.optionsView.el,
    });
  },
  
  setPrice: function (price) { // set price and apply discount if there is one
    var e = this.photoForm.model.event;
    var discount = e.sales.allProducts;
    var discountAmount = (discount && discount.discount) 
                         ? (discount.discount * price) : 0;
    if (discountAmount) {
      price = Math.round(price - discountAmount);
    }
    this.price = price;
  },
  
  updateAddonDiscount: function () {
    if (!this.el) return;
    if (this.model.discount || this.bulkQty) return;
    var discountEl = this.query('.addon-discount');
    if (!discountEl) return;
    var e = this.photoForm.model.event;
    var discount = e.sales.allProducts;
    var discountAmount = discount && discount.discount;
    this.el.classList.toggle('discounted', !!discountAmount);
    this.query('.addon-discount').innerHTML = 
        '-'+ helpers.formatDiscount(discountAmount);
  },
  
  updatePrice: function (noBubbling) {
    var size = this.parent;
    while (!size.model) {
      size = size.parent;
    }
    var sizeId = size.model.size_id;
    // var sizeId = this.model.collection.parent.size_id;
    if (this.model.options.length <= 1) {
      if (this.model.options.length) {
        this.setPrice(this.model.options.at(0).getPrice(sizeId));
        // this.price = this.model.options.at(0).getPrice(sizeId);
      }
      else {
        this.setPrice(this.model.price);
        // this.price = this.model.price;
      }
    }
    else {
      this.setPrice(this.selected_id ? 
          this.model.options.get(this.selected_id).getPrice(sizeId) : 0);
      // this.price = this.selected_id ? 
      //     this.model.options.get(this.selected_id).getPrice(sizeId) : 0;
    }
    if (!noBubbling) size.updatePrice();
    if (this.model.options.length > 1 && 
        !this.model.bulkQty && !this.model.discount) this.active = !!this.price;
    if (this.model.discount) this.active = true;
    
    this.updateTotal();
  },

});
