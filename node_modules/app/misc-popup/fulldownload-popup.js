/*==========================================================================*\
  A popup with a full download link and its details
\*==========================================================================*/
"use strict";
var MiscPopup = require('./misc-popup');

var app = require('app');
var xhr = require('xhr');
//var axios = require('axios');
//var assign = require('lodash.assign');

module.exports = MiscPopup.extend({
  viewType: 'fulldownload-popup',
  template: require('app/templates')['misc-popup'].fulldownload,
  
  save: function () {
    if (this.xhr) return;
    
    var keychain = app.keychain.events.get(app.view.currentPage.eventId);
    var email = (keychain && keychain.email) ? keychain.email : undefined;
    var token = keychain ? keychain.token : '';
    
    //If we don't know their email address or the event they are on, get out
    if(!!!email || !!!app.view.currentPage.eventId) {
      this.alert('Missing email address.');
      return;
    }

    var self = this;
    this.query('.button.save').classList.add('loading');

    var data = {
      email: email,
    };

    this.xhr = xhr({
      uri: app.apiUrl +'events/download/'+app.view.currentPage.eventId+'?url='+
          app.url+'&email='+email +'&tok='+token,
      method: 'GET',
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(data),
    }, function (err, resp, body) {
      body = JSON.parse(body);
      //console.log("return body:", body);
      if (body.status === 200) {
        self.sent = true;
        self.query('.misc-content .download-details').innerHTML = "<h2>"+self.lz('Success! An email with download links will be sent within the next 20 minutes.')+"</h2>";
      }
      else {
        // Hide loading sign and let the user know there was a problem
        self.query('.button.save').classList.remove('loading');
        self.query('.misc-content .download-details').innerHTML = "<h2>"+self.lz('Failed. You may have used all of your download attempts.')+"</h2>";
        self.alert(body.message);
      }
      self.xhr = null;
    });
  },
});
