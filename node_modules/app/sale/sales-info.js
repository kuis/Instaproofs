/*==========================================================================*\
  A description of current event's sales 
\*==========================================================================*/
"use strict";
var BaseView = require('app/base/base-view');
var SaleView = require('./sale');

var app = require('app');

module.exports = BaseView.extend({
  viewType: 'sales-info',
  dictionary: 'sales',
  template: require('app/templates').sale['sales-info'],
  
  props: {
  },
  
  bindings: {
    'model.isEmpty': {
      type: 'booleanClass',
      name: 'empty',
    },
  },
  
  // initialize: function () {
  //   BaseView.prototype.initialize.apply(this, arguments);
  // },
  
  events: {
  },
  
  render: function () {
    this.renderWithTemplate();
    this.cacheElements({
      saleItemsEl: '.sale-items',
    });
    
    if (app.state.bootstrapped) {
      this.renderCollection(this.model.groups, SaleView, this.saleItemsEl);
    }
    else {
      this.listenToOnce(app.state, 'change:bootstrapped', function () {
        this.renderCollection(this.model.groups, SaleView, this.saleItemsEl);
      });
    }
  },
  
  

});
