/*==========================================================================*\
  A description of a group of current event's sales 
\*==========================================================================*/
"use strict";

var BaseView = require('app/base/base-view');

var app = require('app');
var helpers = require('app/util/helpers/helpers'); 
var moment = require('moment');

module.exports = BaseView.extend({
  viewType: 'sale',
  template: require('app/templates').sale.sale,
  
  props: {
  },
  
  derived: {
    buyForm: {
      fn: function () {
        return this.getParent('photo-form');
      },
    },
  },
  
  bindings: {
    'model.expiration': {
      type: function (el, expiration) {
        if (expiration === 0 && this.model.collection) { // expired
          this.model.collection.remove(this.model);
          // if (this.buyForm) this.buyForm.updatePositions();
        }
        if (!expiration) return;
        var names = this.getNamesAndDiscounts();
        if (typeof expiration === 'number') {
          var left = moment.duration(expiration);
          
          el.innerHTML = this.lz('%s. Offer ending in %s', 
              names,
              this.toDoubleDigit(left.days() * 24 + left.hours()) +':'+ 
              this.toDoubleDigit(left.minutes()) +':'+ 
              this.toDoubleDigit(left.seconds()));
        }
        else {
          el.innerHTML = this.lz('%s. Offer ends %s', 
              names, this.model.expires);
        }
      },
      selector: '.name',
    },
  },
  
  events: {
  },
  
  getNamesAndDiscounts: function () {
    var i;
    var hasSpecificSizes = false;
    var discount;
    var names = [];
    var name;
    var size;
    for (i = 0; i < this.model._discounts.length; i++) {
      discount = this.model._discounts[i];
      if (discount.type === 'size') {
        hasSpecificSizes = true;
        size = app.sizes.get(discount.id);
        if (!size) continue;
        name = size.display_name;
      }
      else {
        name = discount.type;
      }
      
      names.push({ 
        name: name, 
        type: discount.type, 
        discount: discount.discount,
        discountPercentage: helpers.formatDiscount(discount.discount), 
      });
    }
    return names;
  },
  
  // render: function () {
  //   this.renderWithTemplate();
  // },
});
