/*==========================================================================*\
  A Purchase Addon Optionm, e.g. paper type
\*==========================================================================*/
"use strict";

var app = require('app');
var ShippingCollection = require('app/models/cart/shipping-prices-collection');

var Size = require('app/models/base-model').extend({
  props: {
    id: 'number', // The size ID
    
    // The qty of this size that should be added to the product
    qty: ['number', true, 0],
    type: ['string', true, 'exactly'],  // exactly|up-to
  },
  
  derived: {
    size: {
      fn: function () {
        return app.purchaseOptions.get(this.id);
      },
    },
    // lzString: {
    //   fn: function () {
    //     if (this.type === 'exactly') {
    //       return '%d '+ size.display_name;
    //     }
    //     else {
    //       return 'Up to %d';
    //     }
    //   },
    // }
  },
});
var SizesCollection = require('app/models/base-collection').extend({
  model: Size,
});

module.exports = require('app/models/base-model').extend({
  props: {
    id: 'number',
    name: ['string', true, ''], // name to display
    description: ['string', true, ''], // an optional description
    img_url: ['string', true, ''], // The URL for the option's image
    img_width: ['number', true, 0], // The width of the option's image
    img_height: ['number', true, 0], // The height of the option's image
    price: ['number', true, 0], // The price of the option, in cents
    allow_notes: ['boolean', true, false], // user can add notes to this option
    available_qty: ['number', true, -1], // -1 for unlimited.
  },
  
  collections: {
    shipping: ShippingCollection,
    required_size_list: SizesCollection,
  },
  
  derived: {
    display_price: {
      deps: ['price'],
      fn: function () {
        return this.formatMoney(this.price);
      },
    },
  }
});
