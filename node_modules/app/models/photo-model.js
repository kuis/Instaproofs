/*==========================================================================*\
  A Photo
\*==========================================================================*/
"use strict";

module.exports = require('app/models/base-model').extend({
  props: {
    id: 'number',
    name: ['string', true, ''],
    desc: ['string', true, ''],
    fav_id: ['number', true, 0],
    can_hide: ['boolean', true, false],
    hidden: ['boolean', true, false],
    download: ['boolean', true, false], // can be downloaded
    product: ['boolean', true, false],
    orig_width: ['number', true, 0],
    orig_height: ['number', true, 0],
    // file_name: ['string', true, ''],
    img_url: ['string', true, ''],
    
    bw: ['boolean', true, false], // black & white option
    sepia: ['boolean', true, false], // sepia option
    
    // featured: ['boolean', true, false],
  },
  
  derived: {
    app_url: {
      deps: ['img_url'],
      fn: function () {
        return '#events/'+ this.collection.parent.collection.parent.id +'/'+
               this.collection.parent.id +'/'+ this.id;
      },
    },
    thumb_url: {
      deps: ['img_url'],
      fn: function () {
        return this.toThumbURL(this.img_url);
      },
    },
    
    ratio: {
      deps: ['orig_width', 'orig_height'],
      fn: function () {
        return this.orig_width / this.orig_height;
      },
    },
    
    next: {
      fn: function () {
        var index = this.collection.indexOf(this);
        return this.collection.at(index+1) || null;
      },
    },
    prev: {
      fn: function () {
        var index = this.collection.indexOf(this);
        return this.collection.at(index-1) || null;
      },
    },
    
    nextAround: {
      fn: function () {
        var category = this.collection.parent;
        if (!this.next && category.collection && category.collection.length > 1) {
          return category.nextAround.photos.at(0);
        }
        return this.next || this.collection.at(0);
      },
    },
    prevAround: {
      fn: function () {
        var category = this.collection.parent;
        if (!this.prev && category.collection && category.collection.length > 1) {
          return category.prevAround.photos.last();
        }
        return this.prev || this.collection.last();
      },
    },
  },
  
  // session: {
  //   xPos: ['number', true, 0],
  //   yPos: ['number', true, 0],
  //   width: ['number', true, 0],
  //   height: ['number', true, 0],
  // },
  
});
