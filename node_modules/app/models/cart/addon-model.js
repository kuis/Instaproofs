/*==========================================================================*\
  A Photo Purchase Addon like paper type or UV protection
\*==========================================================================*/
"use strict";

module.exports = require('app/models/base-model').extend({
  props: {
    id: 'number',
    name: ['string', true, ''], // name to display
    img_url: ['string', true, ''], // URL to an optional image
    img_width: ['number', true, 0], // image width in pixels
    img_height: ['number', true, 0], // image height in pixels
    description: ['string', true, ''], // an optional description
    price: ['number', true, 0], // price of an addon in cents
  },
  
  collections: {
    options: require('./addon-options-collection'),
  },
  
  derived: {
    display_price: {
      deps: ['price'],
      fn: function () {
        return this.formatMoney(this.price);
      },
    },
    
    selected_name: {
      deps: ['options', 'name'],
      fn: function () {
        return this.default_option ? this.default_option.name : this.name;
      },
    },
    
    default_option: {
      deps: ['options'],
      fn: function () {
        return this.options.where({ selected: true })[0];
      },
    },
    
    sizes: {
      fn: function () {
        var i, j, option;
        var sizes = {};
        for (i = 0; i < this.options.length; i++) {
          option = this.options.at(i);
          for (j in option.sizes) {
            if (!sizes[j]) sizes[j] = [];
            sizes[j].push(option);
          }
        }
        return sizes;
      },
    },
  },
  
  getName: function (oid) {
    if (this.options.length && typeof oid === 'number') {
      return this.options.get(oid).name;
    }
    return this.name;
  },
  
  initialize: function () {
    if (this.options.length > 1) {
      this.options.add({
        id: 0,
        name: 'None',
      }, {
        at: 0,
      });
    }
  },
});
