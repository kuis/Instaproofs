/*==========================================================================*\
  App routes
\*==========================================================================*/
"use strict";

var EventModel = require('app/event/event-model');
var EventNav = require('app/event/event-nav');
var Lightbox = require('app/lightbox/lightbox');
var NavContents = require('app/nav/nav-contents');
var OrderModel = require('app/cart/checkout/order-model');
var Router = require('ampersand-router');
var qs = require('querystring');

var app = require('app');
var lightbox; // lightbox view
var pages = {}; // list of initialized page views
var navs = { // navbar views
  global: new NavContents(),
};

var views = {
  cart: require('app/cart/cart-page'),
  category: require('app/category/category-page'),
  checkout: require('app/cart/checkout/checkout-page'),
  confirmation: require('app/cart/checkout/confirmation-page'),
  paypal_confirmation: require('app/cart/checkout/paypal-confirmation-page'),
  favorites: require('app/favorites/favorites-page'),
  home: require('app/event/events-page'),
  event: require('app/event/event-page'),
  unsubscribe: require('app/event/unsubscribe/unsubscribe-page')
};

module.exports = Router.extend({
  
  // currentParameters: null, // parameters for currently opened location 
  currentPage: null, // current type of page opened 
  enterSlideshow: false, // enter the slideshow on next lightbox display 
  
  encodeParams: function (data) {
    return '?json='+ encodeURIComponent(JSON.stringify(data));
  },
  decodeParams: function (str) {
    return JSON.parse(decodeURIComponent(str));
  },
  
  setNav: function (page, eid) { // sets navbar to global or event's one
    var view;
    if (!eid) view = navs.global;
    else if (navs['event'+eid]) view = navs['event'+eid];
    else {
      view = new EventNav({
        id: eid,
        model: app.eventModels[eid],
      });
      navs['event'+eid] = view;
    }

    if (page === 'category')
      view.searchBar = false;
    else if (page !== undefined)
      view.searchBar = true;
    
    app.state.currentEventId = eid || null;
    app.view.nav.setContents(view);
  },
  
  openPage: function (page, ops) {
    ops = ops || {};
    var id = ops.id ? page + ops.id : page;
    delete ops.id;
    var view = pages[id] ? pages[id].reset(ops) : new views[page](ops);
    pages[id] = view;
    
    this.currentPage = page;
    
    // if (page !== 'home') {
    //   if (app.state.noTransitions) app.view.largeLogoVisible = false;
    //   else setTimeout(function () {
    //     app.view.largeLogoVisible = false;
    //   }, 400);
    // }
    
    app.history.add({
      eid: +ops.eid,
      shortTitle: view.shortTitle || view.pageTitle,
      type: view.pageType, 
      url: ops.url,
      config: ops,
      id: id,
    });
    
    this.trigger('page', view, id, ops.url);
    this.trigger('page:'+id, view, id, ops.url);
    
      
    // app.keychain.clear();
  },
  showLightbox: function (eid, cid, pid, config) {
    var event = app.eventModels[eid]
        || (pages.home && pages.home.list.collection.get(eid));
    var collection = cid === 'favorites' ? event.favorites.photos
                                         : event.categories.get(cid).photos;
    var photo = collection.get(pid);
        
    if (!lightbox) {
      this.lightbox = lightbox = new Lightbox({ 
        // el: app.view.query('#lightbox') 
      });
    }
    
    app.history.add({
      eid: +eid,
      shortTitle: '__lightbox',
      type: 'lightbox', 
      url: 'events/'+ eid +'/'+ cid +'/'+ pid, 
      config: config,
      id: 'lightbox'+ eid +'-'+ pid,
    });
    
    lightbox.reset({
      event: event,
      collection: collection,
      photo: photo,
      // backTo: back || (cid === 'favorites' ? '#events/'+eid+'/favorites'
      //                                      : '#events/'+eid+'/'+cid),
      slideshow: this.enterSlideshow,
    });
    lightbox.show();
    this.enterSlideshow = false;
  },
  hideLightbox: function () {
    if (lightbox) lightbox.hide();
  },
  
  // shows login form if needed and logs out from other events
  login: function (event) {
    var splash = app.view.splashView;
    splash.model = event;
    app.keychain.clear(event.id);
    var keychain = app.keychain.events.get(event.id);
    if (event.name && event.locked) {
      if (!keychain || !keychain.verified || (event.email && !keychain.email) ||
          (event.password && !keychain.password) ) {
        if (app.state.bootstrapped) splash.showLoginForm(event);
        return false;
      }
      else {
        splash.hide();
      }
    }
    else {
      splash.hide();
    }
    return true;
  },
  
  initialize: function() {
    this.lightbox = {};
    this.productLightbox = {};
    
    app.on('event-logout', function (eid) { // forget all event pages
      var event = app.eventModels[eid];
      if (event && !event.email && !event.password) return;
      var re = new RegExp("^(event|category|favorites|cart|checkout)"+ eid);
      for (var pageId in pages) {
        if (re.test(pageId)) {
          console.log('delete page', pageId);
          delete pages[pageId];
        }
      } 
    });
    
    // dev mode store switcher ===============================================
    this.route(/url=(.*)/, function (url) {
      if (window.localStorage) {
        window.localStorage.clear();
        console.log('local storage cleared');
      }
      app.storage.appUrl = url;
      app.url = url;
      app.navigate('events');
      window.location.reload();
    });
    
    // dev mode local storage wipe ===========================================
    this.route(/clear/, function () {
      if (window.localStorage) {
        window.localStorage.clear();
        console.log('local storage cleared');
      }
      app.navigate('events');
      window.location.reload();
    });

    // unsubscribe ===========================================================
    this.route(/^(unsubscribe(?:\?(.*?))?)$/, function (fullUrl, query) {
      var query = qs.parse(query);

      if (lightbox) {
        this.hideLightbox();
      }

      var eid = query.event;
      eid = +eid;
      var model = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = model;

      this.openPage('unsubscribe', {
        eid: query.event || '',
        email: query.email || '',
        prefId: query.emlid || '',
        model: model
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav();

      if (app.isReady) {
        app.view.splashView.hide('force');
      }

    });
    
    // homepage ==============================================================
    this.route(/^(events(?:\?(.*?))?)$/, 'home', function (fullUrl, query) {
      if (lightbox) this.hideLightbox();
      
      this.openPage('home', {
        eid: null,
        url: fullUrl,
      });

      app.view.nav.eventSearch = false;
      app.view.nav.photoSearch = true;
      this.setNav();

      if (app.isReady) {
        if (app.config.style !== 'login') app.view.splashView.hide('force');
        else app.view.splashView.showHomeLoginForm();
      }
      
      app.keychain.clear();
    });
    
    // event page ============================================================
    this.route(/^(events\/(\d+))$/, function (fullUrl, eid) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();
      eid = +eid;
      var model = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
          
      if (model.alt_homepage) {
        this.history.navigate(model.alt_homepage, { 
            trigger: true, replace: true });
        return;
      }
          
      app.eventModels[eid] = model;
      this.login(model);
      this.openPage('event', {
        eid: eid,
        id: eid,
        model: model,
        url: fullUrl,
      });

      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('event', eid);
    });
    
    // event category page ===================================================
    this.route(/^(events\/(\d+)\/(\d+))$/, function (fullUrl, eid, cid) {
      this.currentParameters = {};
      var lightboxDisplayed = !!this.lightbox.displayed;
      if (lightbox) this.hideLightbox();
      
      eid = +eid;
      cid = +cid;
      var model = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = model;

      this.login(model);

      this.openPage('category', {
        eid: eid,
        id: eid+'_'+cid,
        cid: cid,
        model: model,
        showMore: lightboxDisplayed,
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = false;

      this.setNav('category', eid);
    });
    
    // event favorites page ====================================================
    this.route(/^(events\/(\d+)\/favorites)$/, function (fullUrl, eid) {
      this.currentParameters = {};
      var lightboxDisplayed = !!this.lightbox.displayed;
      if (lightbox) this.hideLightbox();
      
      eid = +eid;
      var model = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = model;
      
      this.login(model);
      
      this.openPage('favorites', {
        eid: eid,
        id: eid,
        model: model,
        showMore: lightboxDisplayed,
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('favorites', eid);
    });

    // single photo ==========================================================
    // this.route(/^events\/(\d+)\/(\d+|favorites)\/(\d+)(?:(buy)|(crop)(\d+)(?::(\d+))?)?$/,
    //     function (eid, cid, pid, buy, crop, id1, id2) {
    this.route(/^(events\/(\d+)\/(\d+|favorites)\/(\d+)(?:\?json=(.*))?)$/,
      function (fullUrl, eid, cid, pid, json) {
        // if (cid === 'favorites') return app.navigate('events/'+eid+'/favorites');
        this.currentParameters = {};

        this.lightboxMode = true;
        app.state.lightboxMode = true;
        this.willShowLightbox = true;
        var self = this;
        eid = +eid;
        cid = cid === 'favorites' ? 'favorites' : +cid;
        pid = +pid;
        json = this.decodeParams(json);
        var event = app.eventModels[eid]
            || (pages.home && pages.home.list.collection.get(eid))
            || new EventModel({ id: eid });
        app.eventModels[eid] = event;

        this.currentParameters = json || {};

        var loggedIn = this.login(event);

        // if (crop) { // sizeId or productId:sizeId
        //   crop = id2 ? [+id1, +id2] : +id1;
        // }
        // var mode = crop || buy;

        // if (buy || crop) { // these URLs are only for internal use
        if (json) { // these URLs are only for internal use
          this.navigate('events/'+eid+'/'+cid+'/'+pid, {
            trigger: false,
            replace: true,
          });
        }

        // if (!mode || this.currentPage !== 'cart') this.openPage('category', {
        // if (!json && !app.view.currentPage) {
        if (!app.view.currentPage) {
          if (cid === 'favorites') {
            this.openPage('favorites', {
              eid: eid,
              id: eid,
              model: event,
              showMore: false,
              url: 'events/'+ eid +'/favorites',
            });
          }
          else {
            this.openPage('category', {
              eid: eid,
              id: eid+'_'+cid,
              cid: cid,
              model: event,
              showMore: false,
              url: 'events/'+ eid +'/'+ cid,
            });
          }
        }
        app.view.nav.eventSearch = true;
        app.view.nav.photoSearch = true;

        this.setNav('favorites/category', eid);

        // Show loading icon
        app.state.loading = true;

        if (!event.complete) {
          event.once('change:complete', function () {
            self.showLightbox(eid, cid, pid);
          });
        }
        else if (!app.isReady) {
          app.ready(function () {
            self.showLightbox(eid, cid, pid);
          });
        }
        else {
          // this.showLightbox(eid, cid, pid,
          //     json && this.currentPage === 'cart' && ('#events/'+eid+'/cart'));
          this.showLightbox(eid, cid, pid, json);
        }
    });
    
    // cart page =============================================================
    this.route(/^(events\/(\d+)\/cart)$/, function (fullUrl, eid) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();
      
      // var cart = carts['event'+eid];
      // if (!cart) {
      //   cart = carts['event'+eid] = new CartModel({})
      // }
      var event = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = event;
      
      if (!event.complete && !event.fetching) {
        event.fetch();
      }
      
      this.login(event);

      this.openPage('cart', {
        eid: eid,
        id: eid,
        model: app.eventModels[eid].cart,
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('cart', eid);
    });
    
    
    // checkout page =========================================================
    this.route(/^(events\/(\d+)\/checkout)$/, function (fullUrl, eid) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();
      
      var event = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = event;
      
      if (!event.complete && !event.fetching) {
        event.fetch();
      }
      
      this.login(event);
      
      this.openPage('checkout', {
        eid: eid,
        id: eid,
        model: app.eventModels[eid].cart,
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('checkout', eid);
    });
    
    
    // order confirmation page =================================================
    this.route(/^(events\/(\d+)\/confirmation\/(\d+))$/, 
                                                function (fullUrl, eid, oid) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();
      
      var order = app.orders[oid];
      if (!order) {
        var stored = app.storage['order'+ oid];
        if (stored) order = new OrderModel(JSON.parse(stored));
      }
      
      // if (!order) return;
      if (!order) return this.navigate('events');
      console.log('confirm route', eid, oid);
      
      var event = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = event;
      
      if (!event.complete && !event.fetching) {
        event.fetch();
      }

      this.login(event);
      
      this.openPage('confirmation', {
        eid: eid,
        id: oid,
        model: order,
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('confirmation', eid);
    });

    // paypal confirmation page ==================================================
    this.route(/^(events\/(\d+)\/paypal_confirmation(?:\?(.*?))?)$/, function (fullUrl, eid, query) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();

      query = qs.parse(query);

      var event = app.eventModels[eid]
          || (pages.home && pages.home.list.collection.get(eid))
          || new EventModel({ id: eid });
      app.eventModels[eid] = event;

      if (!event.complete && !event.fetching) {
        event.fetch();
      }

      this.login(event);

      this.openPage('paypal_confirmation', {
        eid: eid,
        model: app.eventModels[eid].cart,
        token: query.token || '',
        payerID: query.PayerID || '',
        url: fullUrl,
      });
      app.view.nav.eventSearch = true;
      app.view.nav.photoSearch = true;

      this.setNav('paypal_confirmation', eid);

    });

    // paypal cancel page =========================================================
    this.route(/^(events\/(\d+)\/paypal_cancel(?:\?(.*?))?)$/, function (fullUrl, eid, query) {
      this.currentParameters = {};
      if (lightbox) this.hideLightbox();

      app.navigate('events/' + eid + '/checkout');

    });
  },
  
  routes: {
    '(*path)': function () { this.redirectTo('events'); },
  },
});
