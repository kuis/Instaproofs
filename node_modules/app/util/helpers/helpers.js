/*============================================================================*\
  A set of helper functions for models and views to encorporate
\*============================================================================*/
"use strict";

var app = require('app');

var imgUrlBlurRegExp = new RegExp("&blur=\\d", 'g');
var imgUrlDimensionsRegExp = new RegExp("w=([0-9]+)&h=([0-9]+)");

module.exports = {
  
  // ===========================================================================
  // bind all object's specified methods to the object
  bindMethods: function (obj, keys) {
    if (typeof keys !== 'object') keys = [keys];
    if (!keys.length) return;
    for (var i = 0; i < keys.length; i++) {
      if (typeof obj[keys[i]] === 'function') {
        obj[keys[i]] = obj[keys[i]].bind(obj);
      }
      else {
        console.warn('Trying to bind a non-function `'+ keys[i] +'`');
      }
    }
    return obj;
  },
  
  // ===========================================================================
  formatMoney: function (val) { // formats with photographer's currency symbol
    var $ = app.config.photographer.currency_symbol;
    if (!val) return $ +'0.00';
    var sign = val < 0 ? '-' : '';
    val = Math.abs(val);
    if (val < 100) return sign+$ +'0.'+ val;
    val = val + '';
    return sign+$ + val.substr(0, val.length-2) +'.'+ val.substr(val.length-2);
  },
  
  // ===========================================================================
  toBlurUrl: function (url) { // adds a blur flag to image URLs
    url = url.replace(imgUrlBlurRegExp, '');
    return url + '&blur=1';
  },
  
  // ===========================================================================
  toThumbUrl: function (url, newWidth) { // converts image URLs to a new width 
    var m = imgUrlDimensionsRegExp.exec(url);
    newWidth = newWidth || 450;
    if (m) {
      var width = m[1];
      var height = m[2];
      url = url.replace('w='+width, 'w='+ newWidth)
               .replace('h='+height, 'h='+ 
                        Math.round(newWidth * height / width));
      return url;
    }
    return url;
  },
};
