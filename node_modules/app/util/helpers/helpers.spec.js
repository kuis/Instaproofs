"use strict";
var proxyquire = require('proxyquireify')(require);

require('./helpers');
var helpers = proxyquire('./helpers', {
  'app': {
    config: {
      photographer: {
        currency_symbol: '%',
      },
    },
  },
  '@noCallThru': true,
});

describe('Helpers Library', function () {
  
  it(".bindMethods(obj, keys) - binds all object's specified methods to "+
      'the object', function () {
    var obj0 = {
      objNum: 0,
      method1: function () { return this.objNum; },
      method2: function () { return this.objNum; },
    };
    var obj1 = {
      objNum: 1,
    };
    
    helpers.bindMethods(obj0, 'method2');
    expect(obj0.method1.apply(obj1)).to.equal(1);
    expect(obj0.method2.apply(obj1)).to.equal(0);
  });
  
  it(".formatMoney(cents) - formats money with photographer's currency symbol", 
                                                                  function () {
    expect(helpers.formatMoney(120085)).to.equal('%1200.85');
  });
  
  it('.toBlurUrl(url) - adds a blur flag to image URLs', function () {
    var url = 'http://www.instaproofs.com/api/rest2/img.php'+
              '?id=270322114&w=1600&h=1600&blur=0';
              
    var thumbUrl = helpers.toBlurUrl(url);
    expect(thumbUrl).to.not.contain('&blur=0');
    expect(thumbUrl).to.contain('&blur=1');
    
    url = 'http://www.instaproofs.com/api/rest2/img.php'+ 
          '?id=270322114&w=1600&h=1600';
    thumbUrl = helpers.toBlurUrl(url);
    expect(thumbUrl).to.not.contain('&blur=0');
    expect(thumbUrl).to.contain('&blur=1');
  });
  
  it('.toThumbUrl(url, [width]) - converts image URLs to 450px '+
      'or specified width', function () {
    var url = 'http://www.instaproofs.com/api/rest2/img.php'+
              '?id=270322114&w=1600&h=1600';
              
    var thumbUrl = helpers.toThumbUrl(url);
    expect(thumbUrl).to.contain('w=450&h=450');
    thumbUrl = helpers.toThumbUrl(url, 800);
    expect(thumbUrl).to.contain('w=800&h=800');
  });
  
  
});
