/*============================================================================*\
  English Locale Definition
\*============================================================================*/
"use strict";

function toOrdinal(num) {
	if (!num) return '0';
	num += '';
	var last = num.substr(num.length - 1, 1);
	var lastTwo = num.substr(num.length - 2, 2);
	if (last === '1' && lastTwo !== '11') return num +'st';
	if (last === '2' && lastTwo !== '12') return num +'nd';
	if (last === '3' && lastTwo !== '13') return num +'rd';
	return num +'th';
}

function getDiscountDescription(discounts) {
  var i;
  var hasSpecificSizes = false;
  var discount, amount;
  var names = [];
  for (i = 0; i < discounts.length; i++) {
    discount = discounts[i];
    amount = discount.discountPercentage + '%'; // an extra % for sprintf
    if (discount.type === 'size') {
    	hasSpecificSizes = true;
    	names.push(discount.name +"'s are "+ amount +' off');
    }
    else if (discount.type === 'allSizes') {
    	if (hasSpecificSizes) names.push('all other photos are '+ amount +' off');
	    else names.push('All photos are '+ amount +' off');
    }
    else if (discount.type === 'allProducts') {
    	names.push('All products are '+ amount +' off');
    }
  }
  
  return names.join(', ');
}

module.exports = {
	name: 'English',
	dictionary: {
		/*========================================================================*\
		  Global Dictionary
		\*========================================================================*/
		global: {
			// Standard connection fail message for one-off 
			// requests (not background ones).
			// LIMIT: 200 characters
			'$connection-fail': 'Communication with the server has failed. '+
					'Please check your internet connection and try again.',
			
			'%s. Offer ending in %s': function (discounts, timer) {
				var desc = getDiscountDescription(discounts);
				return desc +'. Offer ending in '+ timer +'.';
			},
			'%s. Offer ends %s': function (discounts, moment) {
				var desc = getDiscountDescription(discounts);
				return desc +'. Offer ends '+ moment.format('MMMM Do.');
			},
		},
			
		
		/*========================================================================*\
		  Event Page (Photo Categories and Products)
		\*========================================================================*/
		event: {
			'%d Photos': function (num) { // e.g. '25 Photos' or '1 Photo'
				return '%d Photo' + (num > 1 ? 's' : '');
			},
		},
		
		/*========================================================================*\
		  Lightbox
		\*========================================================================*/
		lightbox: {
			photo: {
				'$crop-tips-desktop': '<h3>Cropping Tips</h3>'+
						'<p>Apart from dragging the corners, you can use your mouse wheel '+
						'to resize the selected area.</p>'+
						'<p>When you are done, click OK or simply '+
						'right-click on the photo.</p>'+
						'<div class="got-it">Got it</div>',
			},
		},
			
		
		/*========================================================================*\
			Photo Form
		\*========================================================================*/
		photoForm: {
			// Buy Form ==============================================================
			'%s discount ending %s': function (discount, moment) {
				return '%s discount ending '+ moment.format('MMM Do');
			},
			'Items from %s onward': function (num) {
				return 'Items from '+ toOrdinal(num) +' onward';
			},
			'%s item': function (num) {
				return toOrdinal(num) +' item';
			},
			'$clear-default-selection': 
					"This will clear your saved default selection. "+
          "So each time you add a new photo to your cart, "+
          "you will start with an empty form.",
		},
		
		
		/*========================================================================*\
		  Product
		\*========================================================================*/
		product: {
			"$product-sizes-tip": // LIMIT: 200 characters 
					"When you add photos to your cart, "+
	        "you will be able to add them to this product "+
	        "instead of (or in addition to) "+
	        "buying a photo separately.",
		},
		
		
		/*========================================================================*\
		  Cart
		\*========================================================================*/
		cart: {
			'$total-too-small': 
					'Please add additional items to your cart in order to reach the '+
	        'minimum order requirement of %s.',
	  	'$product-incomplete': 
	  			'Product <b>%s</b> is not fulfilled with photos yet.<br><br>'+
	  			'Press <span class="add-to-cart">Add to Cart</span> '+
	  			'on photos to add them to products.',
	  	'$product-overfilled':
	  			'Product <b>%s</b> has too many <b>%s</b> photos added to it.'+
	  			' Please remove excess photos before checking out.',
	  	
	  	checkout: {
	  		'$checkout-instructions':
	  				"If you'd like to provide special instructions for your order, "+
	  				"write them into the box below:",
	  	},
		},
		
		
		/*========================================================================*\
		  Cart Product
		\*========================================================================*/
		cartProduct: {
			'$no-photos-for-product-size': 
					'Press <span class="add-to-cart">Add to Cart</span> '+
					'on photos to add them to this product.',
		},
		
		
		/*========================================================================*\
		  Order Confirmation
		\*========================================================================*/
		orderConfirmation: {
			'$order-confirm-receipt-info': 
					'A receipt will be emailed to you shortly. '+
				  'You can also view it by using the button below.',
		},
	},
};
