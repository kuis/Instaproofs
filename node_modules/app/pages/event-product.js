/*==========================================================================*\
  A single event product page
\*==========================================================================*/
"use strict";

var _ = require('underscore');
var ua = require('app/utils/ua');
var ProductView = require('app/views/event/product');
var Page = require('app/pages/base');
var FixedFooter = require('app/views/event/product-footer');

module.exports = Page.extend({
  pageTitle: '',
  pageType: 'event-product',
  template: require('app/templates').pages.event,
  complete: false, // whether all photos are displayed 
  
  events: {
    // 'click .sorting a': 'sort',
    'click .load-more > .label': 'showMore',
    // 'scroll': 'onScroll',
  },
  
  subviews: _.extend({}, {
    product: {
      container: '.products',
      waitFor: 'model.complete',
      prepareView: function (el) {
        this.triggerReady();
        this.product = new ProductView({
          el: el,
          parent: this,
          model: this.model.products.get(this.productID),
        });
        this.fixedFooter.model = this.product.model;
        this.scheduleWrite(function () {
          this.queryByHook('product-name').innerHTML = this.product.model.name;
          this.fixedFooter.render();
        });
        return this.product;
      },
    },
  }, Page.prototype.subviews),
  
  bindings: {
    'model.name': '[data-hook=event-name]',
    // 'model.complete': {
    //   type: 'booleanClass',
    //   selector: '.event-product',
    //   yes: 'loaded',
    //   no: 'loading',
    // },
  },
  
  
  compare: function (page) {
    if (this.product && this.product.model && 
        page.product && page.product.model && 
        this.model.products === page.product.model.collection) {
      
      if (this.model.products.indexOf(this.product.model) > 
          page.product.model.collection.indexOf(page.product.model)){
        return 'right-transition';
      }
      else {
        return 'left-transition';
      }  
    }
    return 'normal-transition';
  },
  
  initialize: function (ops) {
    Page.prototype.initialize.apply(this, arguments);
    // var self = this;
    ops = ops || {};
    
    this.productID = ops.cid;
    if (!this.model.name) {
      this.model.fetch();
    } 
    else {
      this.triggerReady();
    }
    
    this.fixedFooter = new FixedFooter({
      parent: this,
      model: this.product ? this.model.products.get(this.productID) : void 0,
    });
    
    this.setTitle(this.model.name);
    this.listenTo(this.model, 'change:complete', function () {
      this.fixedFooter.model = this.model.products.get(this.productID);
      this.setTitle(this.model.products.get(this.productID).name + ' - '+
                    this.model.name);
      this.scheduleWrite(function () {
        this.fixedFooter.render();
      });
    });
    
    this.render();
  },
  
  reset: function (ops) {
    if (ops.showMore && !this.product.photos.displayedCount) {
      this.product.showMore();
    }
    return this;
  },
  
  onNearBottom: function () {
    if (ua.mobile || this.complete) return;
    this.product.showMore();
    return this;
  },
  onShow: function () {
    if (this.product) this.product.onPageShow();
  },
  
  showMore: function () {
    if (!this.complete) this.product.showMore();
    return this;
  },
  
});



