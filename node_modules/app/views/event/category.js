/*==========================================================================*\
  Event's Category
\*==========================================================================*/
"use strict";

var app = require('app');
var Parent = require('app/views/base');
var PhotosView = require('app/views/event/photos');

module.exports = Parent.extend({
  
  template: require('app/templates').events.category,
  
  preview: false, // whether this is a preview view on 'All Categories' page
  
  initialize: function (ops) {
    Parent.prototype.initialize.apply(this, arguments);
    ops = ops || {};
    this.preview = !!ops.preview;
  },
  
  events: {
    'click .category-slideshow': 'onSlideshowClick',
  },
  
  bindings: {
    'model.name': '[data-hook=category-name]',
    'model.photos.length': {
      type: 'booleanClass',
      selector: '.event-category',
      yes: 'loaded',
      no: 'loading',
    },
    'model.photos': {
      type: function (el, list) {
        el.setAttribute('href', list.parent.app_url +'/'+ list.at(0).id);
      },
      selector: '.category-slideshow',
    },
  },
  
  render: function () {
    this.scheduleWrite(function () {
      this.renderWithTemplate(this);
      this.photos = new PhotosView({
        el: this.query('.photos'),
        collection: this.model.photos,
        parent: this,
        preview: this.preview,
      });
    });
  },
  
  onPageShow: function () {
    if (this.photos && this.photos.collection && this.photos.collection.length) {
      console.log('on show');
      this.showMore();
      this.photos.loadPhotos();
    }
  },
  
  onSlideshowClick: function () {
    app.router.enterSlideshow = true;
  },
  
  showMore: function () {
    this.photos.showMore();
    return this;
  },
  
});






