/*==========================================================================*\
  Event page with a list of categories 
\*==========================================================================*/
"use strict";

var _ = require('underscore');
var Page = require('app/views/base-page');
var CategoriesView = require('./categories');
var ProductsView = require('./products');

module.exports = Page.extend({
  pageTitle: '',
  pageType: 'event',
  
  template: require('app/templates').event['event-page'],
  
  events: {
    // 'click .sorting a': 'sort',
    'click .load-more > .label': 'loadMore',
  },
  
  subviews: _.extend({}, Page.prototype.subviews, {
    categories: {
      container: '.categories',
      waitFor: 'model.name',
      prepareView: function (el) {
        this.triggerReady();
        this.categories = new CategoriesView({
          el: el,
          parent: this,
          collection: this.model.categories,
        });
        return this.categories;
      },
    },
    products: {
      container: '.products',
      waitFor: 'model.name',
      prepareView: function (el) {
        this.triggerReady();
        this.products = new ProductsView({
          el: el,
          parent: this,
          collection: this.model.products, 
        });
        return this.products;
      },
    },
  }, Page.prototype.subviews),
  
  bindings: {
    'model.name': '[data-hook=event-name]',
  },
  
  initialize: function (ops) {
    Page.prototype.initialize.apply(this, arguments);
    ops = ops || {};
    
    if (!this.model.name || !this.model.complete) {
      this.model.fetch();
    } 
    else {
      this.triggerReady();
    }
    if (this.model.categories.length === 1 && this.model.products.length > 0) {
      this.model.categories.models[0].name = this.language.elm['Browse Photos'];
    } 
    this.setTitle(this.model.name);
    this.listenTo(this.model, 'change:name', function () {
      this.setTitle(this.model.name);
    });
    
    this.render();
  },
  
});



