/*==========================================================================*\
  A purchase option in the buy form
\*==========================================================================*/
"use strict";

var app = require('app');
var Parent = require('app/views/base-view');
var popup = require('app/views/global/popup');
var ProductPopup = require('app/views/event/product-popup');

module.exports = Parent.extend({
  template:require('app/templates').lightbox['buy-form']['products-popup-item'],
  
  props: {
    selected: ['boolean', true, false],
  },
  
  derived: {
    // size_id: {
    //   fn: function () {
    //     return this.parent.parent.parent.parent.parent.model.size_id;
    //   },
    // }
  },
  
  bindings: {
    selected: {
      type: 'booleanClass',
      name: 'selected',
    },
  },
  
  initialize: function () {
    Parent.prototype.initialize.apply(this, arguments);
    // this.singlePrice = this.model.price;
    // this.addonView = this.parent.parent;
    // this.selected = this.addonView.selected_id === this.model.id;
    // this.listenTo(this, 'change:active', this.updateFolding);
  },
  
  events: {
    click: 'onClick',
  },
  
  onClick: function () {
    var productPopup = new ProductPopup({
      model: app.products.get(this.model.id),
      eventId: this.parent.parent.parent.parent.model.event.id,
    });
    
    document.body.insertBefore(productPopup.el, 
                               document.getElementById('popup'));
    popup.hide();
  },

});
