/*==========================================================================*\
  A single event category page
\*==========================================================================*/
"use strict";

var _ = require('underscore');
var ua = require('app/utils/ua');
var Page = require('app/views/base-page');
var CategoryView = require('./category');
var FixedFooter = require('./category-footer');

module.exports = Page.extend({
  pageTitle: '',
  pageType: 'event-category',
  template: require('app/templates').category['category-page'],
  complete: false, // whether all photos are displayed 
  
  events: {
    // 'click .sorting a': 'sort',
    'click .load-more > .label': 'showMore',
    // 'scroll': 'onScroll',
  },
  
  subviews: _.extend({}, Page.prototype.subviews, {
    category: {
      container: '.categories',
      waitFor: 'model.complete',
      prepareView: function (el) {
        this.triggerReady();
        this.category = new CategoryView({
          el: el,
          parent: this,
          model: this.model.categories.get(this.categoryID),
        });
        this.fixedFooter.model = this.category.model;
        this.scheduleWrite(function () {
          this.queryByHook('category-name').innerHTML= this.category.model.name;
          this.fixedFooter.render();
        });
        return this.category;
      },
    },
  }),
  
  bindings: {
    'model.name': '[data-hook=event-name]',
    // 'model.complete': {
    //   type: 'booleanClass',
    //   selector: '.event-category',
    //   yes: 'loaded',
    //   no: 'loading',
    // },
  },
  
  
  compare: function (page) {
    if (this.category && this.category.model && 
        page.category && page.category.model && 
        this.model.categories === page.category.model.collection) {
      
      if (this.model.categories.indexOf(this.category.model) > 
          page.category.model.collection.indexOf(page.category.model)){
        return 'right-transition';
      }
      else {
        return 'left-transition';
      }  
    }
    return 'normal-transition';
  },
  
  initialize: function (ops) {
    Page.prototype.initialize.apply(this, arguments);
    // var self = this;
    ops = ops || {};
    
    this.categoryID = ops.cid;
    if (!this.model.name) {
      this.model.fetch();
    } 
    else {
      this.triggerReady();
    }
    
    this.fixedFooter = new FixedFooter({
      parent: this,
      model: this.category ? this.model.categories.get(this.categoryID) :void 0,
    });
    
    this.setTitle(this.model.name);
    this.listenTo(this.model, 'change:complete', function () {
      this.fixedFooter.model = this.model.categories.get(this.categoryID);
      this.setTitle(this.model.categories.get(this.categoryID).name + ' - '+
                    this.model.name);
      this.scheduleWrite(function () {
        this.fixedFooter.render();
      });
    });
    
    this.render();
  },
  
  reset: function (ops) {
    if (ops.showMore && !this.category.photos.displayedCount) {
      this.category.showMore();
    }
    return this;
  },
  
  onNearBottom: function () {
    if (ua.mobile || this.complete) return;
    this.category.showMore();
    return this;
  },
  onShow: function () {
    if (this.category) this.category.onPageShow();
  },
  
  showMore: function () {
    if (!this.complete) this.category.showMore();
    return this;
  },
  
});



