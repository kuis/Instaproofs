/*==========================================================================*\
  A single event category page
\*==========================================================================*/
"use strict";

var _ = require('underscore');
var ua = require('app/utils/ua');
var Page = require('app/views/base-page');
var CategoryView = require('./category');

module.exports = Page.extend({
  dictionary: 'category', // localization dictionary 
  pageTitle: '',
  pageType: 'event-category',
  template: require('app/templates').category['category-page'],
  complete: false, // whether all photos are displayed 
  
  props: {
    eventId: ['number', true, 0],
    empty: ['boolean', true, false],
    isFavPage: ['boolean', true, true],
  },
  
  events: {
    // 'click .sorting a': 'sort',
    'click .load-more > .label': 'showMore',
    // 'scroll': 'onScroll',
  },
  
  subviews: _.extend({}, Page.prototype.subviews, {
    category: {
      container: '.categories',
      waitFor: 'model.complete',
      prepareView: function (el) {
        this.triggerReady();
        this.category = new CategoryView({
          el: el,
          parent: this,
          model: this.model.favorites,
        });
        return this.category;
      },
    },
  }),
  
  bindings: {
    'model.name': '[data-hook=event-name]',
    // 'model.favorites.photos.length': {
    //   type: function (el, val) {
    //     console.log('length change');
    //     this.el.classList.toggle('empty', !this.model.favorites.photos.length);
    //   },
    // },
    'model.favorites.isEmpty': {
      // type: function (el, val) {
      //   console.log('isEmpty', val);
      // },
      type: 'booleanClass',
      name: 'empty',
    },
    // 'model.complete': {
    //   type: 'booleanClass',
    //   selector: '.event-category',
    //   yes: 'loaded',
    //   no: 'loading',
    // },
  },
  
  compare: function () {
    return 'normal-transition';
  },
  
  initialize: function (ops) {
    Page.prototype.initialize.apply(this, arguments);
    // var self = this;
    ops = ops || {};
    
    this.eventId = this.model.id;
    
    this.categoryID = ops.cid;
    if (!this.model.complete) {
      this.model.fetch();
    } 
    else {
      this.triggerReady();
    }
    
    this.setTitle(this.model.name);
    this.listenTo(this.model, 'change:complete', function () {
      this.setTitle(this.model.name);
    });
    
    this.listenTo(this.model.favorites, 'change:mtime', function () {
      this.el.classList.toggle('empty', !this.model.favorites.photos.length);
    });
    
    this.render();
  },
  
  reset: function (ops) {
    if (ops.showMore && !this.category.photos.displayedCount) {
      this.category.showMore();
    }
    return this;
  },
  
  onNearBottom: function () {
    if (ua.mobile || this.complete) return;
    this.category.showMore();
    return this;
  },
  onShow: function () {
    if (this.category) this.category.onPageShow();
  },
  
  showMore: function () {
    if (!this.complete) this.category.showMore();
    return this;
  },
  
});



