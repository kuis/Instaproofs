/*==========================================================================*\
  Cart Page
\*==========================================================================*/
"use strict";

var app = require('app');
var _ = require('underscore');
var Page = require('app/views/base-page');
var Events = require('app/models/events-collection');
var PhotoView = require('./cart-photo');

module.exports = Page.extend({
  dictionary: 'event', // localization dictionary 
  pageTitle: 'Cart',
  pageType: 'event-cart',
  
  template: require('app/templates').cart['cart-page'],
  
  props: {
    eventId: ['number', true, 0],
    summaryPosition: ['string', true, 'static'],
  },
  
  events: {
    // 'click .sorting a': 'sort',
    'click .load-more > .label': 'loadMore',
    'change .shipping select': 'onShippingChange',
  },
  
  bindings: {
    'model.event_name': '[data-hook=event-name]',
    'model.mtime': {
      type: function () {
        this.checkForEmptiness();
      },
      // type: 'booleanClass',
      // name: 'empty',
    },
    
    'model.subtotal': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.subtotal-price',
    },
    'model.discount': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.discount-price',
    },
    'model.shipping_type': {
      type: 'value',
      selector: '.shipping select',
    },
    'model.shipping_total': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.shipping-price',
    },
    'model.total': {
      type: function (el, val) {
        el.textContent = this.model.formatMoney(val);
      },
      selector: '.total-price',
    },
    
    'summaryPosition': {
      type: function (el, val) {
        this.el.classList.toggle('summary-static', val === 'static');
        this.el.classList.toggle('summary-fixed-top', val === 'top');
        this.el.classList.toggle('summary-fixed-bottom', val === 'bottom');
      },
      // type: 'booleanClass',
      // name: 'fixed-summary',
    },
  },
  
  initialize: function (ops) {
    Page.prototype.initialize.apply(this, arguments);
    ops = ops || {};
    
    this.eventId = this.model.event.id;
    
    this.checkForEmptiness = _.throttle(this.checkForEmptiness, 100, {
      // leading: false,
    });
    
    if (!app.state.bootstrapped) {
      this.listenTo(app.state, 'change:bootstrapped', function () {
        app.state.bootstrapped = true;
        
        if (this.model.event.complete) {
          this.onReady();
        }
      });
    }
    if (!this.model.event.complete) {
      this.model.event.fetch();
      this.listenTo(this.model.event, 'change:complete', function () {
        if (app.state.bootstrapped) {
          this.onReady();
        }
      });
    }
    if (app.state.bootstrapped && this.model.event.complete) {
      this.onReady();
    }
    
    this.listenTo(app.state, 'resize', this.resize);
    
    // this.triggerReady();
    // this.setTitle('Cart');
    
  },
  
  checkForEmptiness: function () {
    // this.after(5, function () {
      var photos = this.queryAll('.cart-photo-item.removed');
      this.el.classList.toggle('empty', !photos.length && this.model.is_empty);
    // });
  },
  
  onReady: function () {
    this.render();
    this.shippingSelect.innerHTML = app.templates.cart['shipping-options']();
    if (!this.model.shipping_type) {
      this.model.shipping_type = app.shipping.at(0).id;
    }
    this.shippingSelect.value = this.model.shipping_type;
    this.model.updateSummary();
    this.triggerReady();
  },
  
  render: function () {
    Page.prototype.render.apply(this, arguments);
    if (!this.el) this.renderWithTemplate();
    if (!app.state.bootstrapped) return;
    this.renderCollection(this.model.photos, PhotoView, '.cart-photos');
    
    this.cacheElements({
      leftColEl: '.left-column',
      rightColEl: '.right-column',
      cartContentsEl: '.cart-contents',
      shippingSelect: '.shipping select',
    });
    
    this.resize();
  },
  
  onScroll: function (top) {
    var leftRect = this.leftColEl.getBoundingClientRect();
    var rightRect = this.rightColEl.getBoundingClientRect();
    if (app.state.height < rightRect.height + 50 || 
        leftRect.height <= rightRect.height) {
      this.summaryPosition = 'static';
      return;
    }
    if (leftRect.top < rightRect.top && rightRect.bottom >= leftRect.bottom &&
        rightRect.top <= 35) {
      this.summaryPosition = 'bottom';
    }
    else if (leftRect.top < 35) {
      this.summaryPosition = 'top';
    }
    else {
      this.summaryPosition = 'static';
    }
  },
  
  onShippingChange: function () {
    this.model.shipping_type = this.shippingSelect.value;
    this.model.updateSummary();
    this.model.save();
  },
  
  resize: function () {
    // var offsetTop = this.query('left-column').offsetTop;
    // console.log(offsetTop);  
  },
  
});



