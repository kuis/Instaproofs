/*==========================================================================*\
  Fullscreen toggling
\*==========================================================================*/
"use strict";

var app = require('app');
var ua = require('app/utils/ua');

module.exports = {
  request: function () {
    if (typeof ua.requestFullscreen === 'function') {
      return ua.requestFullscreen();
    }
    return false;
  },
  release: function () {
    if (typeof ua.exitFullscreen === 'function') {
      return ua.exitFullscreen();
    }
    return false;
  },
  toggle: function () {
    return app.state.fullscreen ? this.release() : this.request();
  },
  supported: !!(ua.requestFullscreen && ua.exitFullscreen),
};

function onChange() {
  app.state.fullscreen = !!(
      document.fullScreenElement || document.fullscreenElement ||
      document.webkitFullScreenElement || document.webkitFullscreenElement ||
      document.mozFullScreenElement || document.mozFullscreenElement ||
      document.msFullScreenElement || document.msFullscreenElement ||
      document.oFullScreenElement || document.oFullscreenElement);
}
function onError() {
  console.log('fullscreen error');
  app.state.fullscreen = false;
}

var vendors = ['', 'webkit', 'moz', 'ms', 'o'];
for (var i = 0; i < vendors.length; i++) {
  document.addEventListener(vendors[i]+'fullscreenchange', onChange, false);
  document.addEventListener(vendors[i]+'fullscreenerror', onError, false);
}
